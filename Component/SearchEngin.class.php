<?php/** * DTeacher * * * * @author Luuray * @copyright Rainhan System * @id $Id$ * * Copyright (c) 2010-2017, Rainhan System * Site: www.rainhan.net/?proj=DTeacher */namespace Raindrop\Component;use Raindrop\Configuration;use Raindrop\Exceptions\ConfigurationMissingException;use Raindrop\Exceptions\ModuleNotFoundException;use Raindrop\Exceptions\RuntimeException;class SearchEngin{	protected $_aProviders = [];	public static function Search($sProvider, $sKeywords, $aFields=null){		self::_getInstance()->getProvider($sProvider)->search($sKeywords, $aFields);	}	protected static function _getInstance(){		static $oInstance = null;		if($oInstance === null){			$oInstance = new self();		}		return $oInstance;	}	protected function __construct()	{	}	/**	 * @param $sName	 *	 * @return ISearchProvider	 */	public function getProvider($sName)	{		$sName = strtolower($sName);		if(array_key_exists($sName, $this->_aProviders)){			return $this->_aProviders[$sName];		}		else{			$oConfig = Configuration::Get('SearchEngine/'.$sName);			if($oConfig === null){				throw new ModuleNotFoundException('serch_engine:'.$sName);			}		}	}}