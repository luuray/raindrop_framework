<?php/** * Raindrop Framework for PHP * * SessionKey Model for WeChat Module * * @author Luuray * @copyright Rainhan System * @id $Id$ * * Copyright (c) 2010-2017, Rainhan System * Site: raindrop-php.rainhan.net */namespace Raindrop\Component\WeChat\Model;use Raindrop\Exceptions\NotImplementedException;use Raindrop\Exceptions\RuntimeException;/** * Class SessionKey * * @package Raindrop\Component\WeChat\Model * @property string OpenId * @property string|null UnionId * @property string SessionKey */class SessionKey implements \Serializable, \JsonSerializable{	protected $_sOpenId = null;	protected $_sUnionId = null;	protected $_sSessionKey = null;	public function __construct($oSource)	{		if (empty($oSource->openid) OR empty($oSource->session_key)) {			throw new RuntimeException('invalid_session_key');		}		$this->_sOpenId     = $oSource->openid;		$this->_sUnionId    = $oSource->unionid ?? null;		$this->_sSessionKey = $oSource->session_key;	}	public function __get($sKey)	{		$sKey = strtolower($sKey);		switch ($sKey) {			case 'openid':				return $this->_sOpenId;			case 'unionid':				return $this->_sUnionId;			case 'sessionkey':			case 'session_key':				return $this->_sSessionKey;			default:				return null;		}	}	public function __set($k, $m)	{		throw new NotImplementedException();	}	/**	 * String representation of object	 * @link http://php.net/manual/en/serializable.serialize.php	 * @return string the string representation of the object or null	 * @since 5.1.0	 */	public function serialize()	{		return serialize([			'open_id'     => $this->_sOpenId,			'union_id'    => $this->_sUnionId,			'session_key' => $this->_sSessionKey		]);	}	/**	 * Constructs the object	 * @link http://php.net/manual/en/serializable.unserialize.php	 *	 * @param string $serialized <p>	 * The string representation of the object.	 * </p>	 *	 * @return void	 * @since 5.1.0	 */	public function unserialize($serialized)	{		$aResult = @unserialize($serialized);		$this->_sOpenId     = $aResult['open_id'];		$this->_sUnionId    = $aResult['union_id'];		$this->_sSessionKey = $aResult['session_key'];	}	/**	 * Specify data which should be serialized to JSON	 * @link http://php.net/manual/en/jsonserializable.jsonserialize.php	 * @return mixed data which can be serialized by <b>json_encode</b>,	 * which is a value of any type other than a resource.	 * @since 5.4.0	 */	function jsonSerialize()	{		return json_encode([			'open_id'     => $this->_sOpenId,			'union_id'    => $this->_sUnionId,			'session_key' => $this->_sSessionKey		]);	}}