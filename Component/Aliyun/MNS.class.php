<?php/** * Raindrop Framework for PHP * * Aliyun Message Service * * @author Luuray * @copyright Rainhan System * @id $Id$ * * Copyright (c) 2010-2017, Rainhan System * Site: raindrop-php.rainhan.net */namespace Raindrop\Component\Aliyun;use AliyunMNS\Client;use AliyunMNS\Exception\MnsException;use AliyunMNS\Model\BatchSmsAttributes;use AliyunMNS\Model\MessageAttributes;use AliyunMNS\Requests\PublishMessageRequest;use Raindrop\Configuration;use Raindrop\Exceptions\NotImplementedException;use Raindrop\Exceptions\RuntimeException;use Raindrop\Interfaces\INotification;use Raindrop\Loader;//require_once '/aliyuncs/mns-sdk-php/mns-autoloader.php';Loader::Import(CorePath . '/Component/aliyuncs/mns-sdk-php/mns-autoloader.php');class MNS implements INotification{	protected $_sName;	protected $_oConfig;	protected $_oMNSTopic;	public function __construct(Configuration $oConfig, $sName)	{		$this->_oConfig = $oConfig->Params;		$this->_sName   = $sName;		$this->_oMNSTopic =			(new Client($this->_oConfig->Endpoint, $this->_oConfig->AccessId, $this->_oConfig->AccessKey))				->getTopicRef($this->_oConfig->Topic);	}	public function getName()	{		return $this->_sName;	}	public function sendMsg($mReceiver, $sContent, $sTitle)	{		throw new NotImplementedException();	}	public function sendTemplateMsg($mReceiver, $sTemplateName, $aParams)	{		$oSmsAttr = new BatchSmsAttributes($this->_oConfig->Signature, $sTemplateName);		$oSmsAttr->addReceiver($mReceiver, $aParams);		$oPublishMsgReq = new PublishMessageRequest('-', (new MessageAttributes([$oSmsAttr])));		try {			$oResponse = $this->_oMNSTopic->publishMessage($oPublishMsgReq);			return $oResponse ? true : false;		} catch (MnsException $ex) {			var_dump($this->_oMNSTopic);			throw new RuntimeException($ex->getMessage(), 0, $ex);		}	}}