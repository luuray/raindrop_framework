<?php/** * Raindrop Framework for PHP * * Sphinx Search Provider * * @author Luuray * @copyright Rainhan System * @id $Id$ * * Copyright (c) 2010-2017, Rainhan System * Site: raindrop-php.rainhan.net */namespace Raindrop\Component\Sphinx;use Raindrop\Configuration;use Raindrop\Exceptions\ConfigurationMissingException;use Raindrop\Exceptions\RuntimeException;use Raindrop\Interfaces\ISearchProvider;class Sphinx implements ISearchProvider{	protected $_oConnect = null;	protected $_sIndex = null;	public function __construct($sName, Configuration $oConfig=null)	{		try {			$this->_oConnect = new \PDO(sprintf('mysql:dbname=;host=%s;port=%d;charset=utf8mb4', $oConfig->Server, $oConfig->Port),				null, null,				[					\PDO::ATTR_EMULATE_PREPARES => true,					\PDO::ATTR_ERRMODE=>\PDO::ERRMODE_EXCEPTION				]);			$this->_sIndex = $oConfig->Index;			if(empty($this->_sIndex)){				throw new ConfigurationMissingException("Index");			}		}		catch(\PDOException $ex){			throw new RuntimeException($ex->getMessage());		}	}	public function search($sKeywords, $aFields = null, &$iCount, $iStart = 0, $iLimit = 10)	{		try {			$oStat = $this->_oConnect->prepare(sprintf('SELECT COUNT(1) FROM `%s` WHERE MATCH(:query)', $this->_sIndex));			$oStat->bindValue(':query', '@(' . implode(',', $aFields) . ') ' . $sKeywords, \PDO::PARAM_STR);			if ($oStat->execute() == false) {				throw new RuntimeException('search_engine_failed');			}			$iCount = $oStat->fetchColumn(0);			if($iCount <= $iStart){				return null;			}		}		catch(\PDOException $ex){		}	}}